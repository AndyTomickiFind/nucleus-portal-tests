# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: authenticate
- Location: /home/runner/work/nucleus-portal-tests/nucleus-portal-tests/tests/auth.setup.ts:9:6

# Error details

```
TimeoutError: page.waitForSelector: Timeout 8000ms exceeded.
Call log:
  - waiting for locator('//*[.="Hello Nucleus"]') to be visible

    at /home/runner/work/nucleus-portal-tests/nucleus-portal-tests/tests/auth.setup.ts:37:16
```

# Page snapshot

```yaml
- text: Sign in with Google
- heading "Welcome" [level=1]
- text: qa_nucleus_admin@find.co
- textbox "Enter your password"
- text: Wrong password. Try again or click Forgot password to reset it.
- checkbox "Show password"
- text: Show password
- button "Next"
- button "Forgot password?"
- contentinfo:
  - combobox "English (United States)"
  - list:
    - listitem:
      - link "Help"
    - listitem:
      - link "Privacy"
    - listitem:
      - link "Terms"
```

# Test source

```ts
   1 | import {test as setup} from '@playwright/test';
   2 | import * as path from "node:path";
   3 | import config from "../playwright.config";
   4 | import {getOTP} from "./totpGenerator";
   5 |
   6 |
   7 | const authFile = path.join(__dirname, '../playwright/.auth/user.json');
   8 |
   9 | setup('authenticate', async ({page}) => {
  10 |     await page.setExtraHTTPHeaders({
  11 |         "x-tooling-bypass-auth": process.env.BYPASS_AUTH,
  12 |     });
  13 |
  14 |     await page.goto(`https://${config.baseUrl}/login`);
  15 |     await page.locator('//button').click(); //login with Google button
  16 |     await page.fill('input[type="email"]', config.use.httpCredentials.username);
  17 |     await page.click('#identifierNext');
  18 |
  19 |     const passwordInput = page.locator('input[type="password"]').first();
  20 |
  21 |     await page.waitForTimeout(1000);
  22 |     await passwordInput.fill(config.use.httpCredentials.password);
  23 |     await page.waitForTimeout(500);
  24 |     await page.click('#passwordNext');
  25 |     await page.waitForLoadState();
  26 |     await page.addLocatorHandler(
  27 |         page.locator("//span[.='Try another way']"),
  28 |         async () => {
  29 |             await page.locator("//span[.='Try another way']").click();
  30 |             await page.locator("//div[.='Get a verification code from the Google Authenticator app']").first().click();
  31 |             const otp = await getOTP();
  32 |             await page.getByLabel("Enter code").fill(otp);
  33 |             await page.getByLabel("Enter code").press("Enter");
  34 |         }
  35 |     );
  36 |     await page.waitForLoadState();
> 37 |     await page.waitForSelector('//*[.="Hello Nucleus"]');
     |                ^ TimeoutError: page.waitForSelector: Timeout 8000ms exceeded.
  38 |     await page.context().storageState({path: authFile});
  39 |
  40 | });
  41 |
```